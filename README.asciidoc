= Generic Types
Sebastian Hoß <https://github.com/sebhoss[@sebhoss]>
:github-org: sebhoss
:project-name: generic-types
:project-group: de.xn--ho-hia.utils.types
:coverity-project: 7620
:toc:
:toc-placement: preamble

image:https://img.shields.io/badge/license-cc%20zero-000000.svg?style=flat-square["CC Zero", link="http://creativecommons.org/publicdomain/zero/1.0/"]
pass:[<span class="image"><a class="image" href="https://maven-badges.herokuapp.com/maven-central/de.xn--ho-hia.utils.types/generic-types"><img src="https://img.shields.io/maven-central/v/de.xn--ho-hia.utils.types/generic-types.svg?style=flat-square" alt="Maven Central"></a></span>]
image:https://www.openhub.net/p/{project-name}/widgets/project_thin_badge.gif["Open Hub statistics", link="https://www.ohloh.net/p/{project-name}"]
image:https://img.shields.io/travis/{github-org}/{project-name}/master.svg?style=flat-square["Build Status", link="https://travis-ci.org/{github-org}/{project-name}"]
image:https://img.shields.io/coveralls/{github-org}/{project-name}/master.svg?style=flat-square["", link="https://coveralls.io/github/{github-org}/{project-name}"]
image:https://scan.coverity.com/projects/{coverity-project}/badge.svg["Coverity Scan Result", link="https://scan.coverity.com/projects/{coverity-project}"]
image:https://img.shields.io/badge/irc-%23metio.wtf-green.svg?style=flat-square["Chat on IRC", link="http://webchat.freenode.net/?channels=metio.wtf"]


This https://www.java.com[Java] library provides a factory to create generic `java.lang.reflect.Type` variations, such as `Map<Number, Point>`.

=== Features

* Factory methods to create generic types, including wildcards.

=== Development Status

All currently required feature are implemented. This project is in maintenance mode.


== Usage

[source,java]
----
// Map<Number, Point>
final Type type = GenericTypes.generic(Map.class, Number.class, Point.class);

// List<Number>
final Type type = GenericTypes.generic(List.class, Number.class);
----

Super- and subtypes such as `List<? super Point>` or `List<? extends Number>` can be created in the following way:

[source,java]
----
// List<? super Point>
final Type type = GenericTypes.generic(List.class, GenericTypes.supertype(Point.class));

// List<? extends Number>
final Type type = GenericTypes.generic(List.class, GenericTypes.subtype(Number.class));
----

Use static imports to shorten the above calls to:

[source,java]
----
// List<? super Point>
final Type type = generic(List.class, supertype(Point.class));

// List<? extends Number>
final Type type = generic(List.class, subtype(Number.class));
----

and then go crazy with this:

[source,java]
----
// List<Map<? extends Number, ? super Point>>
final Type type = generic(List.class, generic(Map.class, subtype(Number.class), supertype(Point.class)));
----

=== Integration

To use this project just declare the following dependency inside your POM:

[source,xml,subs="attributes,verbatim"]
----
<dependencies>
  <dependency>
    <groupId>{project-group}</groupId>
    <artifactId>{project-name}</artifactId>
    <version>${version.generic-types}</version>
  </dependency>
</dependencies>
----

Replace `${version.generic-types}` with the pass:[<a href="http://search.maven.org/#search%7Cga%7C1%7Cg%3Ade.xn--ho-hia.utils.types%20a%3Ageneric-types">latest release</a>]. This project follows the link:http://semver.org/[semantic versioning guidelines].


=== Compatibility

This project is compatible with the following Java versions:

.Java compatibility
|===
| | 1.X.Y | 2.X.Y

| Java 8
| ✓
| ✓
|===

== License

To the extent possible under law, the author(s) have dedicated all copyright
and related and neighboring rights to this software to the public domain
worldwide. This software is distributed without any warranty.

You should have received a copy of the CC0 Public Domain Dedication along
with this software. If not, see http://creativecommons.org/publicdomain/zero/1.0/.
